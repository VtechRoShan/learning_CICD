name: Test Job
on:
  push:
    branches: [main]
jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Does it reach up to here
        run: echo "Okay, catch it, Someone pushed"

  Deploy:
    runs-on: ubuntu-latest
    needs: Test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH key
      run: |
        echo "${{ secrets.IMROSHAN_AUTHKEY_VRG }}" >> imroshan_authkey_vrg.pem
        chmod 600 imroshan_authkey_vrg.pem
    - name: Copy files to EC2 instance
      run: |
            scp -i imroshan_authkey_vrg.pem \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            -r ./* ubuntu@54.157.237.164:/home/ubuntu
    - name: Install Apache on Server
      run: |
          ssh -o StrictHostKeyChecking=no -i imroshan_authkey_vrg.pem ubuntu@54.157.237.164 'sudo apt-get install -y apache2 '
    - name: Install MariaDB
      run: |
          ssh -o StrictHostKeyChecking=no -i imroshan_authkey_vrg.pem ubuntu@54.157.237.164 'sudo apt-get update -y && sudo apt-get install mariadb-server -y'

    - name: Run mysql_secure_installation
      run: |
        ssh -o StrictHostKeyChecking=no -i imroshan_authkey_vrg.pem ubuntu@54.157.237.164 '
          sudo apt update
          sudo apt install -y expect

          expect -c "
            spawn sudo mysql_secure_installation
            expect \"Enter current password for root (enter for none):\"
            send \"\r\"
            expect \"Set root password? \[Y/n\]:\"
            send \"Y\r\"
            expect \"New password:\"
            send \"ugra3194\r\"
            expect \"Re-enter new password:\"
            send \"ugra3194\r\"
            expect \"Remove anonymous users? \[Y/n\]:\"
            send \"Y\r\"
            expect \"Disallow root login remotely? \[Y/n\]:\"
            send \"Y\r\"
            expect \"Remove test database and access to it? \[Y/n\]:\"
            send \"Y\r\"
            expect \"Reload privilege tables now? \[Y/n\]:\"
            send \"Y\r\"
            expect eof
          "'

    - name: Create Database and User
      run: |
        ssh -o StrictHostKeyChecking=no -i imroshan_authkey_vrg.pem ubuntu@54.157.237.164 '
          sudo mysql -e "
            CREATE USER IF NOT EXISTS '\''ugra'\''@'\''localhost'\'' IDENTIFIED BY '\''ugra3194'\'';
            CREATE DATABASE IF NOT EXISTS chatapp;
            GRANT ALL PRIVILEGES ON chatapp.* TO '\''ugra'\''@'\''localhost'\'';
            FLUSH PRIVILEGES;
            exit
          "
        ' 
    - name: Start MySQL service
      run: |
          ssh -o StrictHostKeyChecking=no -i imroshan_authkey_vrg.pem ubuntu@54.157.237.164 'sudo systemctl start mysql'
     
    - name: Create users table
      run: |
        ssh -o StrictHostKeyChecking=no -i imroshan_authkey_vrg.pem ubuntu@54.157.237.164 '
          sudo mysql -e "
            USE chatapp;
            CREATE TABLE IF NOT EXISTS users(
              user_id int(11) NOT NULL AUTO_INCREMENT,
              unique_id int(255) NOT NULL,
              fname varchar(255) NOT NULL,
              lname varchar(255) NOT NULL,
              email varchar(255) NOT NULL,
              password varchar(255) NOT NULL,
              img varchar(255) NOT NULL,
              status varchar(255) NOT NULL,
              PRIMARY KEY(user_id)
            );
          "
        '

    - name: Create Message table
      run: |
        ssh -o StrictHostKeyChecking=no -i imroshan_authkey_vrg.pem ubuntu@54.157.237.164 '
          sudo mysql -e "
            USE chatapp;
            CREATE TABLE IF NOT EXISTS messages (
              msg_id int(11) NOT NULL AUTO_INCREMENT,
              incoming_msg_id int(255) NOT NULL,
              outgoing_msg_id int(255) NOT NULL,
              msg varchar(1000) NOT NULL,
              PRIMARY KEY(msg_id)
            );
          "
        ' 
